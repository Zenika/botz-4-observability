receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  filelog/servicelogs:
    include: [ "/log/*.log" ]
    start_at: end
    include_file_path: false
    include_file_name: true
    multiline:
      line_start_pattern: "^{"
    operators:
      - type: json_parser
        id: parse_log
        timestamp:
          parse_from: 'attributes["@timestamp"]'
          layout: "%Y-%m-%dT%H:%M:%S.%LZ"
        severity:
          parse_from: 'attributes["log.level"]'
        output: remove_time
      - type: remove
        id: remove_time
        field: 'attributes["@timestamp"]'
        output: keep_trace_id_and_span_id
      - type: filter
        id: keep_trace_id_and_span_id
        output: parse_trace
        expr: 'not("traceId" in attributes and "spanId" in attributes and "request.method" in attributes and "request.uri" in attributes)'
      - type: trace_parser
        id: parse_trace
        trace_id:
          parse_from: attributes.traceId
        span_id:
          parse_from: attributes.spanId
        output: promote_trace_id
      - type: move
        id: promote_trace_id
        from: attributes.traceId
        to: attributes.traceID
        output: promote_span_id
      - type: move
        id: promote_span_id
        from: attributes.spanId
        to: attributes.spanID
        output: promote_application
      - type: move
        id: promote_application
        from: 'attributes["service.name"]'
        to: attributes.application
        output: promote_service
      - type: move
        id: promote_service
        from: 'attributes["service.node.name"]'
        to: attributes.service
        output: promote_http_method
      - type: move
        id: promote_http_method
        from: 'attributes["request.method"]'
        to: attributes.httpMethod
        output: promote_http_uri
      - type: move
        id: promote_http_uri
        from: 'attributes["request.uri"]'
        to: attributes.httpPath
  #        output: sysout
  #      - id: sysout
  #        type: stdout
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 5s
          metrics_path: "/actuator/prometheus"
          static_configs:
            - targets:
                - "api-service:8080"
                - "customer-service:8080"



processors:
  attributes/loki:
    actions:
      - action: insert
        key: loki.attribute.labels
        value: "application,service,httpMethod,httpPath"
  batch:
    send_batch_size: 5
    send_batch_max_size: 10
    timeout: 2s
  transform/prometheus:
    metric_statements:
      - context: datapoint
        statements:
          - set(attributes["exported_job"], attributes["job"])
          - delete_key(attributes, "job")
          - set(attributes["exported_instance"], attributes["instance"])
          - delete_key(attributes, "instance")



exporters:
  otlp/tempo:
    endpoint: http://tempo:4317
    tls:
      insecure: true
  prometheus:
    endpoint: 0.0.0.0:8889
  loki:
    endpoint: http://loki:3100/loki/api/v1/push

extensions:
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [zpages]
  pipelines:
    metrics:
      receivers: [ otlp ]
      processors: [ batch, transform/prometheus ]
      exporters: [ prometheus ]
    traces:
      receivers: [ otlp ]
      processors: [ batch ]
      exporters: [ otlp/tempo ]
    logs:
      receivers: [ filelog/servicelogs ]
      processors: [ attributes/loki ]
      exporters: [ loki ]
